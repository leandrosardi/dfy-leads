<%
# getting the account of the user
account = BlackStack::Leads::Account.where(:id=>@login.user.id_account).first
# getting the user preferences
name = @login.user.preference("dfy-leads.orders.new.name", '')
# choose link or filters
link_or_filters = @login.user.preference("dfy-leads.orders.new.link_or_filters", 'filters')
# sns url
url = @login.user.preference("dfy-leads.orders.new.url", '')
# positive filter values
positive_keywords = @login.user.preference('dfy-leads.orders.new.positive_keywords', '')
positive_positions = @login.user.preference('dfy-leads.orders.new.positive_positions', '')
positive_industries = @login.user.preference('dfy-leads.orders.new.positive_industries', '')
positive_locations = @login.user.preference('dfy-leads.orders.new.positive_locations', 'United States')
positive_revenues = '' #@login.user.preference('dfy-leads.orders.new.positive_revenues', '')
positive_headcounts = @login.user.preference('dfy-leads.orders.new.positive_headcounts', '')      
positive_engagements = @login.user.preference('dfy-leads.orders.new.positive_engagements', '')
# negative filter values
negative_keywords = @login.user.preference('dfy-leads.orders.new.negative_keywords', '')
negative_positions = @login.user.preference('dfy-leads.orders.new.negative_positions', '')
negative_industries = @login.user.preference('dfy-leads.orders.new.negative_industries', '')
negative_locations = @login.user.preference('dfy-leads.orders.new.negative_locations', '')
negative_revenues = '' #@login.user.preference('dfy-leads.orders.new.negative_revenues', '')
negative_headcounts = @login.user.preference('dfy-leads.orders.new.negative_headcounts', '')      
negative_engagements = @login.user.preference('dfy-leads.orders.new.negative_engagements', '')
%>

<!-- NavBar -->
<div class="mynavbar mysticky">
	<section class="row-fluid">	
		<div class="span12">
		    <%=nav3("DFY Leads", "/dfy-leads", "Orders", "/dfy-leads/orders", "New")%>
		</div>
	</section>
</div>

<section class="row-fluid box">
      <div class="form-horizontal">
        <form action="/dfy-leads/filter_new_order" method="post" id='new_order' name='new_order'>

            <div class="row-fluid">
              <div class='span6'>
                <div class="control-group">
                    <label class="control-label" for="name">Name</label>
                    <div class="controls">
                        <input type="text" id="name" name='name' class='input-block-level selected' placeholder="Write a descriptive name for your order." value='<%=name.to_s.encode_html%>' />
                    </div>
                </div>
              </div>
            </div>

            <div class="row-fluid">
                <div class="control-group">
                    <input type="hidden" class="positive_keywords" name="positive_keywords" id='positive_keywords' value="<%= positive_keywords.to_s.encode_html%>" />
                    <input type="hidden" class="positive_positions" name="positive_positions" id='positive_positions' value="<%= positive_positions.to_s.encode_html%>" />
                    <input type="hidden" class="positive_industries" name="positive_industries" id='positive_industries' value="<%= positive_industries.to_s.encode_html%>" />
                    <input type="hidden" class="positive_locations" name="positive_locations" id='positive_locations' value="<%=positive_locations.to_s.encode_html%>" />
                    <input type="hidden" class="positive_headcounts" name="positive_headcounts" id='positive_headcounts' values="<%=positive_headcounts.to_s.encode_html%>" />
                    <input type="hidden" class="positive_engagements" name="positive_engagements" id='positive_engagements' values="<%=positive_engagements.to_s.encode_html%>" />
            
                    <input type="hidden" class="negative_keywords" name="negative_keywords" id='negative_keywords' value="<%= negative_keywords.to_s.encode_html%>" />
                    <input type="hidden" class="negative_positions" name="negative_positions" id='negative_positions' value="<%= negative_positions.to_s.encode_html%>" />
                    <input type="hidden" class="negative_industries" name="negative_industries" id='negative_industries' value="<%= negative_industries.to_s.encode_html%>" />
                    <input type="hidden" class="negative_locations" name="negative_locations" id='negative_locations' value="<%=negative_locations.to_s.encode_html%>" />
                    <input type="hidden" class="negative_headcounts" name="negative_headcounts" id='negative_headcounts' values="<%=negative_headcounts.to_s.encode_html%>" />
                    <input type="hidden" class="negative_engagements" name="negative_engagements" id='negative_engagements' values="<%=negative_engagements.to_s.encode_html%>" />
                </div>
            </div>

            <div class="row-fluid">
              <div class='span6'>
                <div class="control-group">
                    <label class="control-label" for="link_or_filters">How You Define<br/>Your Target?</label>
                    <div class="controls">
                      <select id="link_or_filters" name="link_or_filters" class='input-block-level selected'>
                        <option value="link" <%=link_or_filters == 'link' ? 'selected' : ''%>>Link</option>
                        <option value="filters" <%=link_or_filters == 'filters' ? 'selected' : ''%>>Filters</option>
                      </select>
                    </div>
                </div>
              </div>
              <div class='span6 box'>
                <b>Link of Filters?</b> Choose <b>Filters</b> if you don't have Sales Navigator.<br/>
                If you have Sales Navigator, choose <b>Link</b> and paste the search URL.
              </div>
            </div>

            <div class="row-fluid">
              <div class='span6'>                
                <div class="control-group" id='link' name='link'>
                    <label class="control-label" for="name">Sales Navigator<br/>Search URL</label>
                    <div class="controls">
                        <input type="text" id="url" name='url' class='input-block-level' placeholder="Paste Sales Navitator Search Link here." value='<%=url.to_s.encode_html%>' />
                    </div>
                </div>
              </div>
            </div>
        </form>
      </div>

        <div id='filters' name='filters'>
          <div class='row-fluid'>
            <div class='span6'>
              <div id='keywords'></div>
            </div>
            <div class='span6 box'>
              <b>Keywords:</b> Words in the Linkedin profile of the leads.<br/>
              Example: <span class='label label-blue'>I help</span>, <span class='label label-blue'>consulting</span>
            </div>
          </div>

          <div class='row-fluid'>
            <div class='span6'>
              <div id='positions'></div>
            </div>
            <div class='span6 box'>
              <b>Positions:</b> Roles in his/her current job.<br/>
              Example: <span class='label label-blue'>CEO</span>, <span class='label label-blue'>Founder</span>.
            </div>
          </div>

          <div class='row-fluid'>
            <div class='span6'>
              <div id='industries'></div>
            </div>
            <div class='span6 box'>
              <b>Industries:</b> Niches of the company where he/she is working.<br/>
              Example: <span class='label label-blue'>Financial Services</span>, <span class='label label-blue'>Restaurants</span>.
            </div>
          </div>

          <div class='row-fluid'>
            <div class='span6'>
              <div id='locations'></div>
            </div>
            <div class='span6 box'>
              <b>Locations:</b> Where the leads are living.<br/>
              Example: <span class='label label-blue'>United States</span>, <span class='label label-blue'>Canada</span>.
            </div>
          </div>

          <div class='row-fluid'>
            <div class='span6'>
              <div id='headcounts'></div>
            </div>
            <div class='span6 box'>
              <b>Headcount:</b> How many employees do the companies have.<br/>
              Example: <span class='label label-blue'>1-10</span>, <span class='label label-blue'>11-50</span>.
            </div>
          </div>

          <div class='row-fluid'>
            <div class='span6'>
              <div id='engagements'></div>
            </div>
            <div class='span6 box'>
              <b>Engagement:</b> Keywords posted by leads in their timelines, at some point in the past.<br/>
              Example: <span class='label label-blue'>join my Facebook group</span>.
            </div>
          </div>
        </div> <!-- end of #filters -->

        <div class='row-fluid'>
          <div class="control-group">
              <div class="controls">
                  <button type="submit" class="btn btn-blue" id='create' name='create'>Create</button>
              </div>
          </div>
        </div>
</section>

<script>
    // show or hide #link or #filters, depending the selected optin in #link_or_filters
    function switch_link_or_filters() {
        // get the selected option in the select tag #link_or_filters
        var link_or_filters = $('#link_or_filters').val();
        if (link_or_filters == 'link') {
            $('#link').show();
            $('#filters').hide();
        } else {
            $('#link').hide();
            $('#filters').show();
        }
    }

    $(document).ready(function() {
        // choose the option box
        //$('#link_or_filters').val('link').change();

        // show the correct form, depending on the radio button
        switch_link_or_filters();

        // when choose an option of the select #link_or_filters
        $('#link_or_filters').change(function() {
            // show the correct form, depending on the radio button
            switch_link_or_filters();
        });

        // submit the form #new_order when clock on the button #create
        $('#create').click(function() {
            $('#new_order').submit();
        });

        // get the search parameters from the filterjs controls
        var keywords = document.getElementById('keywords');
        var positions = document.getElementById('positions');
        var industries = document.getElementById('industries');
        var locations = document.getElementById('locations');
        var headcounts = document.getElementById('headcounts');      
        var engagements = document.getElementById('engagements');

        // update the hidden textfields with the values of the filters
        function update_hidden_fields() {

            i = 0;
            s = '';        
            filtersJs.getPositiveValues(keywords).forEach(function(value) {
              if (i>0) { s += ','; }
              s += value.trim();
              i++;
            });
            $('.positive_keywords').val(s);
        
            i = 0;
            s = '';
            filtersJs.getNegativeValues(keywords).forEach(function(value) {
              if (i>0) { s += ','; }
              s += value.trim();
              i++;
            });
            $('.negative_keywords').val(s);

            
            i = 0;
            s = '';        
            filtersJs.getPositiveValues(positions).forEach(function(value) {
              if (i>0) { s += ','; }
              s += value.trim();
              i++;
            });
            $('.positive_positions').val(s);
        
            i = 0;
            s = '';
            filtersJs.getNegativeValues(positions).forEach(function(value) {
              if (i>0) { s += ','; }
              s += value.trim();
              i++;
            });
            $('.negative_positions').val(s);
        

            i = 0;
            s = '';
            filtersJs.getPositiveValues(industries).forEach(function(value) {
              if (i>0) { s += ','; }
              s += value.trim();
              i++;
            });
            $('.positive_industries').val(s);
        
            i = 0;
            s = '';
            filtersJs.getNegativeValues(industries).forEach(function(value) {
              if (i>0) { s += ','; }
              s += value.trim();
              i++;
            });
            $('.negative_industries').val(s);

            
            i = 0;
            s = '';
            filtersJs.getPositiveValues(locations).forEach(function(value) {
              if (i>0) { s += ','; }
              s += value.trim();
              i++;
            });
            $('.positive_locations').val(s);
        
            i = 0;
            s = '';
            filtersJs.getNegativeValues(locations).forEach(function(value) {
              if (i>0) { s += ','; }
              s += value.trim();
              i++;
            });
            $('.negative_locations').val(s);
        
            /*
            i = 0;
            s = '';
            filtersJs.getPositiveValues(revenues).forEach(function(value) {
              if (i>0) { s += ','; }
              s += value.trim();
              i++;
            });
            $('.positive_revenues').val(s);

            i = 0;
            s = '';
            filtersJs.getNegativeValues(revenues).forEach(function(value) {
              if (i>0) { s += ','; }
              s += value.trim();
              i++;
            });
            $('.negative_revenues').val(s);
            */

            i = 0;
            s = '';
            filtersJs.getPositiveValues(headcounts).forEach(function(value) {
              if (i>0) { s += ','; }
              s += value.trim();
              i++;
            });
            $('.positive_headcounts').val(s);
        
            i = 0;
            s = '';
            filtersJs.getNegativeValues(headcounts).forEach(function(value) {
              if (i>0) { s += ','; }
              s += value.trim();
              i++;
            });
            $('.negative_headcounts').val(s);
        

            i = 0;
            s = '';        
            filtersJs.getPositiveValues(engagements).forEach(function(value) {
              if (i>0) { s += ','; }
              s += value.trim();
              i++;
            });
            $('.positive_engagements').val(s);
        
            i = 0;
            s = '';
            filtersJs.getNegativeValues(engagements).forEach(function(value) {
              if (i>0) { s += ','; }
              s += value.trim();
              i++;
            });
            $('.negative_engagements').val(s);
        } // function update_hidden_fields()

        // draw filters
        filtersJs.draw(keywords, {
          label: 'Keywords',
          allowed_positive_keywords: true, // default value: true
          allowed_negative_keywords: true, // default value: false
          // catch event: update hidden textfield when filter is changed    
          on_add_value: function (value) {
            update_hidden_fields();
          },
          // catch event: update hidden textfield when filter is changed    
          on_remove_value: function (value) {
            update_hidden_fields();
          },
        });

        filtersJs.draw(positions, {
          label: 'Positions',
          allowed_positive_keywords: true, // default value: true
          allowed_negative_keywords: true, // default value: false
          // catch event: update hidden textfield when filter is changed    
          on_add_value: function (value) {
            update_hidden_fields();
          },
          // catch event: update hidden textfield when filter is changed    
          on_remove_value: function (value) {
            update_hidden_fields();
          },
        });
    
        filtersJs.draw(industries, {
          label: 'Industries',
          allowed_positive_keywords: true, // default value: true
          allowed_negative_keywords: true, // default value: false
          allowed_values: ['<%=BlackStack::Leads::Industry.order(:name).all.map { |o| o.name.encode_html }.join("', '")%>'],      
          // catch event: update hidden textfield when filter is changed    
          on_add_value: function (value) {
            update_hidden_fields();
          },
          // catch event: update hidden textfield when filter is changed    
          on_remove_value: function (value) {
            update_hidden_fields();
          },
        });
    
        filtersJs.draw(locations, {
          label: 'Locations',
          allowed_positive_keywords: true, // default value: true
          allowed_negative_keywords: true, // default value: false
          allowed_values: [
            '<%=BlackStack::MySaaS::Country.order(:name).all.map { |o| o.name.encode_html }.join("', '")%>',
            '<%=BlackStack::MySaaS::State.order(:name).all.map { |o| o.name.encode_html }.join("', '")%>'
          ],
          // catch event: update hidden textfield when filter is changed    
          on_add_value: function (value) {
            update_hidden_fields();
          },
          // catch event: update hidden textfield when filter is changed    
          on_remove_value: function (value) {
            update_hidden_fields();
          },
        });

        filtersJs.draw(headcounts, {
            label: 'Headcounts',
            allowed_positive_keywords: true, // default value: true
            allowed_negative_keywords: true, // default value: false
            allowed_values: ['<%=BlackStack::Leads::Headcount.order(:name).all.map { |o| o.name.encode_html }.join("', '")%>'],      
            // catch event: update hidden textfield when filter is changed    
            on_add_value: function (value) {
              update_hidden_fields();
            },
            // catch event: update hidden textfield when filter is changed    
            on_remove_value: function (value) {
              update_hidden_fields();
            },
        });
        /*
        filtersJs.draw(revenues, {
            label: 'Revenues',
            allowed_positive_keywords: true, // default value: true
            allowed_negative_keywords: true, // default value: false
            allowed_values: ['<%=BlackStack::Leads::Revenue.order(:name).all.map { |o| o.name.encode_html }.join("', '")%>'],      
            // catch event: update hidden textfield when filter is changed    
            on_add_value: function (value) {
              update_hidden_fields();
            },
            // catch event: update hidden textfield when filter is changed    
            on_remove_value: function (value) {
              update_hidden_fields();
            },
        });
        */
        filtersJs.draw(engagements, {
          label: 'Engagements',
          allowed_positive_keywords: true, // default value: true
          allowed_negative_keywords: true, // default value: false
          // catch event: update hidden textfield when filter is changed    
          on_add_value: function (value) {
            update_hidden_fields();
          },
          // catch event: update hidden textfield when filter is changed    
          on_remove_value: function (value) {
            update_hidden_fields();
          },
        });

        // set filter values
        <%
        positive_keywords.split(',').each { |s|
          %>
          filtersJs.addValue(keywords, '<%=s%>', true);
          <%
        }

        negative_keywords.split(',').each { |s|
          %>
          filtersJs.addValue(keywords, '<%=s%>', false);
          <%
        }

        positive_positions.split(',').each { |s|
          %>
          filtersJs.addValue(positions, '<%=s%>', true);
          <%
        }

        negative_positions.split(',').each { |s|
          %>
          filtersJs.addValue(positions, '<%=s%>', false);
          <%
        }

        positive_industries.split(',').each { |s|
          %>
          filtersJs.addValue(industries, '<%=s%>', true);
          <%
        }

        negative_industries.split(',').each { |s|
          %>
          filtersJs.addValue(industries, '<%=s%>', false);
          <%
        }

        positive_locations.split(',').each { |s|
          %>
          filtersJs.addValue(locations, '<%=s%>', true);
          <%
        }

        negative_locations.split(',').each { |s|
          %>
          filtersJs.addValue(locations, '<%=s%>', false);
          <%
        }

        positive_headcounts.split(',').each { |s|
          %>
          filtersJs.addValue(headcounts, '<%=s%>', true);
          <%
        }

        negative_headcounts.split(',').each { |s|
          %>
          filtersJs.addValue(headcounts, '<%=s%>', false);
          <%
        }

        positive_engagements.split(',').each { |s|
          %>
          filtersJs.addValue(engagements, '<%=s%>', true);
          <%
        }

        negative_engagements.split(',').each { |s|
          %>
          filtersJs.addValue(engagements, '<%=s%>', false);
          <%
        }
      %>
    });
</script>